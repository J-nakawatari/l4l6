name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json
      
      - name: Install backend dependencies
        run: npm ci --prefix backend
      
      - name: Install frontend dependencies
        run: npm ci --prefix frontend
        continue-on-error: true  # フロントエンドがまだない場合のため
      
      - name: Lint backend
        run: npm run lint --prefix backend
        continue-on-error: true  # lintスクリプトがまだない場合のため
      
      - name: Type check backend
        run: npm run type-check --prefix backend
        continue-on-error: true  # type-checkスクリプトがまだない場合のため
      
      - name: Validate OpenAPI spec
        run: npm run openapi:validate --prefix backend
      
      - name: Run backend tests
        run: npm test --prefix backend
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key
          JWT_REFRESH_SECRET: test-refresh-secret-key
      
      - name: Generate test coverage
        run: npm run test:coverage --prefix backend
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key
          JWT_REFRESH_SECRET: test-refresh-secret-key
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
        continue-on-error: true
      
      - name: Security audit
        run: |
          npm audit --prefix backend --audit-level=high
        continue-on-error: true  # 依存関係の脆弱性チェック（警告のみ）
      
      - name: Build backend
        run: npm run build --prefix backend
        continue-on-error: true  # buildスクリプトがまだない場合のため

  docker-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: l4l6-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
        continue-on-error: true  # Dockerfileがまだない場合のため